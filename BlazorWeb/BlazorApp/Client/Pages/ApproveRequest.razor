@using System.ComponentModel.DataAnnotations;
@using Admin.Services
@using Claim.Services
@inject grpcAdminService.grpcAdminServiceClient adminServiceClient;
@inject grpcClaimService.grpcClaimServiceClient ClaimServiceClient;
@inject MasterService masterService;
@inject SettingService settingService;
@inject IJSRuntime JsRuntime;
@inject IToastService toastService

<style>
    .color-blue {
        color: blue !important;
    }

    .color-green {
        color: green !important;
    }

    .color-maroon {
        color: maroon !important;
    }

    .font-bold {
        font-weight: bold !important;
    }

    .padding-right-col12 {
        padding-right: 15px
    }

    .padding-right-col3 {
        padding-right: 15px
    }
</style>

<div class="container">
    <div class="row align-items-end">
        <div class="col-6 col-lg-2">
            <!--ClaimNo-->
            <MyTextEdit @bind-Text="Model.ClaimNo"
                        ReadOnly="true"
                        Literal="Số tờ trình"
                        InputCssClass="color-blue font-bold" />
        </div>
        <div class="col-6 col-lg-2">
            <!--InternalDocNo-->
            <MyTextEdit @bind-Text="Model.InternalDocNo"
                        Literal="Số nội bộ"
                        ReadOnly="true"
                        InputCssClass="color-maroon font-bold" />
        </div>
        <div class="col-6 col-lg-2">
            <MyDateEdit @bind-Date="Model.CompenDateTime"
                        ReadOnly="true"
                        Format="dd/MM/yyyy HH:mm"
                        Literal="Ngày giờ" />
        </div>
        <!--Chi nhanh BM-->
        <div class="col-6 col-lg-2">
            <MyTextEdit @bind-Text="Model.BranchName"
                        ReadOnly="true"
                        Literal="Chi nhánh Bảo Minh" />
        </div>
        <!--Attach files-->
        <div class="col-6 col-lg-3 pt-2">
            <MyButton BtnCss="btn btn-dark"
                      Text="@AttachFileText"
                      OnClick="ShowAttachFiles"
                      Width="15rem">
                <Icon>
                    <i class="fa fa-paperclip" aria-hidden="true" style="padding-right:10px"></i>
                </Icon>
            </MyButton>
        </div>
    </div>

    <!--Row2 ======================================================================================-->
    <div class="row">
        <!--Left-->
        <div class="col-12 col-lg-4 padding-right-col12">
            <!--Thông tin phương tiện-->
            <div class="row mt-3" style="margin-right:50px">
                <div class="col-12 border border-primary bg-info text-white">
                    Thông tin phương tiện
                </div>
            </div>
            <!--CarOwner,LicensePlate-->
            <div class="row">
                <div class="col-7">
                    <MyTextEdit @bind-Text="Model.CarOwner"
                                Literal="Chủ sở hữu"
                                ReadOnly="true"
                                InputCssClass="font-bold"
                                CssClass="carowner-focus" />
                </div>
                <div class="col-5">
                    <MyTextEdit @bind-Text="Model.PhoneNo"
                                Literal="Điện thoại"
                                ReadOnly="true"
                                InputCssClass="color-blue font-bold"
                                CssClass="phoneno-focus" />
                </div>
            </div>
            <!--Nhan hieu,So loai-->
            <div class="row">
                <div class="col-4" style="padding-right:0">
                    <MyTextEdit @bind-Text="Model.BrandName"
                                ReadOnly="true"
                                Literal="Nhãn hiệu" />
                </div>
                <div class="col-4" style="padding-left: 4px; padding-right: 0">
                    <MyTextEdit @bind-Text="Model.CarType"
                                ReadOnly="true"
                                Literal="Số loại" />
                </div>
                <div class="col-4" style="padding-left:4px;">
                    <MyTextEdit @bind-Text="Model.LicensePlate"
                                Literal="Biển kiểm soát"
                                ReadOnly="true"
                                InputCssClass="color-blue font-bold"
                                CssClass="licenseplate-focus" />
                </div>
            </div>
            <!--Nam san xuat,So cho ngoi-->
            <div class="row">
                <div class="col-7">
                    <MyTextEdit @bind-Text="Model.ManufactureYear"
                                ReadOnly="true"
                                Literal="Năm sản xuất" />
                </div>
                <div class="col-5">
                    <MyNumEdit @bind-Value="Model.SeatCount"
                               ReadOnly="true"
                               Mask="N0"
                               Literal="Số chỗ ngồi" />
                </div>
            </div>
            <!--Mục đích sử dụng-->
            <div class="row">
                <div class="col-12">
                    <MyTextEdit @bind-Text="Model.BusinessTarget"
                                ReadOnly="true"
                                Literal="Mục đích sử dụng" />
                </div>
            </div>
            <!--Nam ĐK lần đầu, tải trọng-->
            <div class="row">
                <div class="col-6">
                    <MyTextEdit @bind-Text="Model.FirstYearReg"
                                ReadOnly="true"
                                Literal="Năm ĐKLĐ" />
                </div>
                <div class="col-6">
                    <MyNumEdit @bind-Value="Model.Weight"
                               Mask="N0"
                               ReadOnly="true"
                               Literal="Tải trọng (kg)" />
                </div>
            </div>
            <!--Giay chung nhan, tu ngay, den ngay-->
            <div class="row no-gutters">
                <div class="col-4" style="padding-right:0">
                    <MyTextEdit @bind-Text="Model.CarRegisterNo"
                                ReadOnly="true"
                                Literal="Giấy CNĐK số" />
                </div>
                <div class="col-4" style="padding-left: 2px; padding-right: 0">
                    <MyDateEdit @bind-Date="Model.RegFromDate"
                                ReadOnly="true"
                                Literal="Từ ngày" />
                </div>
                <div class="col-4" style="padding-left:2px">
                    <MyDateEdit @bind-Date="Model.RegToDate"
                                Literal="Đến ngày"
                                ReadOnly="true"
                                CssClass="regtodate-focus" />
                </div>
            </div>
            <!--Lai xe, giấy phép lái xe-->
            <div class="row">
                <div class="col-7">
                    <MyTextEdit @bind-Text="Model.Driver"
                                ReadOnly="true"
                                Literal="Lái xe" />
                </div>
                <div class="col-5">
                    <MyTextEdit @bind-Text="Model.DriveLicenseNo"
                                ReadOnly="true"
                                Literal="GPLX số" />
                </div>
            </div>
            <!--Hạng, tu ngay, den ngay-->
            <div class="row no-gutters">
                <div class="col-4" style="padding-right:0">
                    <MyTextEdit @bind-Text="Model.DriveLicenseLevel"
                                ReadOnly="true"
                                Literal="Hạng" />
                </div>
                <div class="col-4" style="padding-left: 2px; padding-right: 0">
                    <MyDateEdit @bind-Date="Model.LicenseFromDate"
                                ReadOnly="true"
                                Literal="Từ ngày" />
                </div>
                <div class="col-4" style="padding-left:2px">
                    <MyDateEdit @bind-Date="Model.LicenseToDate"
                                Literal="Đến ngày"
                                ReadOnly="true"
                                CssClass="licensetodate-focus" />
                </div>
            </div>

        </div>

        <!--Mid---------------------------------------------------------------->
        <div class="col-12 col-lg-4 padding-right-col12">
            <!--Thông tin tai nạn-->
            <div class="row mt-3" style="margin-right:50px">
                <div class="col-12 border border-primary bg-info text-white">
                    Thông tin tai nạn
                </div>
            </div>
            <!--Ngày giờ-->
            <div class="row">
                <div class="col-6">
                    <MyDateEdit @bind-Date="Model.AccidentDateTime"
                                ReadOnly="true"
                                Format="dd/MM/yyyy HH:mm"
                                Literal="Ngày giờ" />
                </div>
            </div>
            <!--Nơi xảy ra tai nạn-->
            <div class="row">
                <div class="col-12">
                    <MyTextEdit @bind-Text="Model.AccidentPlace"
                                ReadOnly="true"
                                Literal="Nơi xảy ra tai nạn" />
                </div>
            </div>
            <!--Cơ quan xử lý tại nạn-->
            <div class="row">
                <div class="col-12">
                    <MyTextEdit @bind-Text="Model.AccidentProcessor"
                                ReadOnly="true"
                                Literal="Cơ quan xử lý tại nạn" />
                </div>
            </div>
            <!--Diễn biến tai nạn-->
            <div class="row">
                <div class="col-12">
                    <MyMemoEdit @bind-Text="Model.AccidentProgress"
                                Rows="2"
                                ReadOnly="true"
                                Literal="Diễn biến tai nạn" />
                </div>
            </div>
            <!--Nguyên nhân-->
            <div class="row">
                <div class="col-12">
                    <MyMemoEdit @bind-Text="Model.AccidentReason"
                                Rows="2"
                                ReadOnly="true"
                                Literal="Nguyên nhân" />
                </div>
            </div>
            <!--Mức độ tổn thất-->
            <div class="row">
                <div class="col-12">
                    <MyMemoEdit @bind-Text="Model.DamageVolume"
                                Rows="2"
                                ReadOnly="true"
                                Literal="Mức độ tổn thất" />
                </div>
            </div>
        </div>

        <!--Right-------------------------------------------------------------->
        <div class="col-12 col-lg-4 padding-right-col3">
            <!--Thông tin bảo hiểm-->
            <div class="row mt-3" style="margin-right:50px">
                <div class="col-12 border border-primary bg-info text-white">
                    Thông tin bảo hiểm
                </div>
            </div>
            <!--VCX==========================-->
            <!--Hợp đồng bảo hiểm số, hiệu lực tu ngay, den ngay-->
            <div class="row no-gutters">
                <div class="col-4" style="padding-right:0">
                    <MyTextEdit @bind-Text="Model.VCXContractNo"
                                Literal="Số HĐ VCX"
                                ReadOnly="true"
                                InputCssClass="color-blue font-bold"
                                CssClass="vcxcontractno-focus" />
                </div>
                <div class="col-4" style="padding-left:4px;padding-right:4px">
                    <MyDateEdit @bind-Date="Model.VCXFromDate"
                                ReadOnly="true"
                                Literal="Từ ngày" />
                </div>
                <div class="col-4" style="padding-left:0">
                    <MyDateEdit @bind-Date="Model.VCXToDate"
                                Literal="Đến ngày"
                                ReadOnly="true"
                                CssClass="vcxtodate-focus" />
                </div>
            </div>
            <!--Thanh toán phí BH, ngày thanh toán-->
            <div class="row">
                <div class="col-6">
                    <MyTextEdit @bind-Text="Model.VCXPayStatus"
                                ReadOnly="true"
                                Literal="Thanh toán" />
                </div>
                <div class="col-6">
                    <MyDateEdit @bind-Date="Model.VCXPayDate"
                                ReadOnly="true"
                                Literal="Ngày" />
                </div>
            </div>
            <!--Điều khoản-->
            <div class="row">
                <div class="col-12">
                    <MyMemoEdit @bind-Text="Model.VCXContent"
                                Rows="2"
                                ReadOnly="true"
                                Literal="Điều khoản" />
                </div>
            </div>
            <!--Điều khoản bổ sung-->
            <div class="row">
                <div class="col-12">
                    <MyTextEdit @bind-Text="Model.VCXRules"
                                ReadOnly="true"
                                Literal="Điều khoản bổ sung" />
                </div>
            </div>
            <!--Khấu trừ-->
            <div class="row">
                <div class="col-12">
                    <MyTextEdit @bind-Text="Model.VCXDeduct"
                                ReadOnly="true"
                                Literal="Khấu trừ" />
                </div>
            </div>
            <!--TNDS==========================-->
            <!--Hợp đồng bảo hiểm số, hiệu lực tu ngay, den ngay-->
            <div class="row no-gutters">
                <div class="col-4" style="padding-right:0">
                    <MyTextEdit @bind-Text="Model.TNDSContractNo"
                                Literal="Số HĐ TNDS"
                                ReadOnly="true"
                                InputCssClass="color-blue font-bold"
                                CssClass="tndscontractno-focus" />
                </div>
                <div class="col-4" style="padding-left:4px;padding-right:4px">
                    <MyDateEdit @bind-Date="Model.TNDSFromDate"
                                ReadOnly="true"
                                Literal="Từ ngày" />
                </div>
                <div class="col-4" style="padding-left:0">
                    <MyDateEdit @bind-Date="Model.TNDSToDate"
                                Literal="Đến ngày"
                                ReadOnly="true"
                                CssClass="tndstodate-focus" />
                </div>
            </div>
            <!--Thanh toán phí BH, ngày thanh toán-->
            <div class="row">
                <div class="col-6">
                    <MyTextEdit @bind-Text="Model.TNDSPayStatus"
                                ReadOnly="true"
                                Literal="Thanh toán" />
                </div>
                <div class="col-6">
                    <MyDateEdit @bind-Date="Model.TNDSPayDate"
                                ReadOnly="true"
                                Literal="Ngày" />
                </div>
            </div>
            <!--Điều khoản-->
            <div class="row">
                <div class="col-12">
                    <MyMemoEdit @bind-Text="Model.TNDSContent"
                                Rows="3"
                                ReadOnly="true"
                                Literal="Điều khoản" />
                </div>
            </div>
        </div>
    </div>

    <!--Row3 ======================================================================================-->
    <div class="row">
        <!--left--------------------------------------------------------------->
        <div class="col-12 col-lg-4 padding-right-col12">
            <!--Phạm vi và phương án bồi thường-->
            <div class="row mt-3" style="margin-right:50px">
                <div class="col-12 border border-primary bg-info text-white">
                    Phạm vi và phương án bồi thường
                </div>
            </div>
            <!--Ngày trình-->
            <div class="row">
                <div class="col-6">
                    <MyDateEdit @bind-Date="Model.ReqDateTime"
                                ReadOnly="true"
                                Format="dd/MM/yyyy HH:mm"
                                Literal="Ngày trình"
                                InputCssClass="color-green" />
                </div>
                <!--Cán bộ bồi thường-->
                <div class="col-6">
                    <MyComboBox @bind-Value="ReqPerson"
                                Data="UserList"
                                ReadOnly="true"
                                TextFieldName="@(nameof(UserAccountModel.Fullname))"
                                Literal="Cán bộ bồi thường" />
                </div>
            </div>
            <!--Nhận định của cán bộ bồi thường-->
            <div class="row">
                <div class="col-12">
                    <MyMemoEdit @bind-Text="Model.ReqContent"
                                Rows="2"
                                ReadOnly="true"
                                Literal="Nhận định của cán bộ bồi thường" />
                </div>
            </div>
            <!--Ước lượng tổn thất-->
            <div class="row">
                <div class="col-12">
                    <MyMuteLabel Literal="Ước lượng tổn thất" />
                    <DxMaskedInput @bind-Value="Model.EstDamageAmount"
                                   ReadOnly="true"
                                   Mask="N0"
                                   InputCssClass="color-red font-bold text-align-right" />
                </div>
            </div>
            <!--Chấp nhận bồi thường-->
            <div class="row mt-3">
                <div class="col-12">
                    <DxCheckBox @bind-Checked="@Model.CompenStatus"
                                Enabled="false">
                        <label style="color:green; font-weight:bold"> Chấp nhận bồi thường </label>
                    </DxCheckBox>
                </div>
            </div>
            <!--Yêu cầu báo giá-->
            <div class="row mt-3">
                <div class="col-6">
                    <DxCheckBox @bind-Checked="@Model.EstReqStatus"
                                Enabled="false">
                        <label style="color:blue;"> Yêu cầu báo giá </label>
                    </DxCheckBox>
                </div>
                <div class="col-6">
                    <DxCheckBox @bind-Checked="@Model.EstDoneStatus"
                                Enabled="false">
                        <label style="color:navy;">Đã báo giá xong </label>
                    </DxCheckBox>
                </div>
            </div>
            <!--Chấp nhận báo giá-->
            <div class="row mt-3">
                <div class="col-12">
                    <DxCheckBox @bind-Checked="@Model.EstAprStatus"
                                Enabled="false">
                        <label style="color:maroon;"> Chấp nhận báo giá </label>
                    </DxCheckBox>
                </div>
            </div>
            <!--Đơn vị sửa chữa-->
            <div class="row">
                <div class="col-12">
                    <MyTextEdit Literal="Đơn vị sửa chữa"
                                @bind-Text="Model.RepairerName"
                                ReadOnly="true" />
                </div>
            </div>

            <!--==============================================-->
            <!--Thông tin sửa chữa-->
            <div class="row mt-3" style="margin-right:50px">
                <div class="col-12 border border-primary bg-info text-white">
                    Thông tin sửa chữa
                </div>
            </div>
            <!--Ngày bàn giao xe-->
            <div class="row">
                <div class="col-6">
                    <MyDateEdit @bind-Date="Model.RepairDoneDatetime"
                                Format="dd/MM/yyyy HH:mm"
                                ReadOnly="true"
                                Literal="Ngày giao xe"
                                InputCssClass="color-green" />
                </div>
            </div>
            <!--Ghi chú-->
            <div class="row">
                <div class="col-12">
                    <MyMemoEdit @bind-Text="Model.RepairNotes"
                                Rows="2"
                                ReadOnly="true"
                                Literal="Ghi chú sửa chữa" />
                </div>
            </div>
            <!--Đã sửa xong-->
            <div class="row mt-3">
                <div class="col-6">
                    <DxCheckBox @bind-Checked="@Model.RepairStatus"
                                Enabled="false">
                        <label style="color:green; font-weight:bold"> Đã sửa xong </label>
                    </DxCheckBox>
                </div>
            </div>
            <!--Nghiệm thu-->
            <div class="row mt-3">
                <div class="col-12">
                    <DxCheckBox @bind-Checked="@Model.AprRepairStatus"
                                Enabled="false">
                        <label style="color:maroon;"> Nghiệm thu </label>
                    </DxCheckBox>
                </div>
            </div>

        </div>

        <!--mid---------------------------------------------------------------->
        <div class="col-12 col-lg-4 padding-right-col12">
            <!--Giá sửa chữa-============================================-->
            <div class="row mt-3" style="margin-right:50px">
                <div class="col-12 border border-primary bg-info text-white">
                    Giá sửa chữa
                </div>
            </div>
            <!--Chi tiet bao gia-->
            <div class="row justify-content-center mt-3">
                <MyButton BtnCss="btn btn-warning"
                          Text="Chi tiết báo giá sửa chữa"
                          OnClick="ShowEstimation"
                          Width="15rem">
                    <Icon>
                        <i class="fa fa-calculator" aria-hidden="true" style="padding-right:10px"></i>
                    </Icon>
                </MyButton>
            </div>
            <!--Diễn giải tính toán bồi thường-->
            <div class="row">
                <div class="col-12">
                    <MyMemoEdit @bind-Text="Model.CompenCalDescription"
                                Rows="3"
                                ReadOnly="true"
                                Literal="Diễn giải tính toán bồi thường" />
                </div>
            </div>

            <!--Chế tài, khấu trừ-->
            <div class="row">
                <div class="col-6">
                    <MyMuteLabel Literal="% Chế tài" />
                    <DxMaskedInput Value="Model.DiscountRate"
                                   ValueChanged="@((double newValue) => DiscountRate_OnValueChanged(newValue))"
                                   ReadOnly="Model.PayStatus"
                                   Mask="p0"
                                   InputCssClass="color-blue font-bold text-align-right" />
                </div>
                <div class="col-6">
                    <MyMuteLabel Literal="Khấu trừ" />
                    <DxMaskedInput Value="Model.TipAmount"
                                   ValueChanged="@((double newValue) => TipAmount_OnValueChanged(newValue))"
                                   ReadOnly="Model.PayStatus"
                                   Mask="N0"
                                   InputCssClass="font-bold color-maroon text-align-right" />
                </div>
            </div>
            <!--Tiền đền bù-->
            <div class="row">
                <div class="col-12">
                    <MyNumEdit @bind-Value="Model.ClaimPrice"
                               ReadOnly="true"
                               Mask="N0"
                               Literal="Tiền đền bù"
                               InputCssClass="color-blue font-bold" />
                </div>
            </div>

            <!--Thanh toan cho khach hang-->
            <div class="row mt-2">
                <div class="col-12">
                    <DxCheckBox @bind-Checked="@Model.IsPayForCustomer"
                                Enabled="false">
                        <label> Thanh toán cho khách hàng </label>
                    </DxCheckBox>
                </div>
            </div>
            <!--Thanh toán cho-->
            <div class="row mt-0 mb-0 p-0">
                <div class="col-12">
                    <DxTextBox @bind-Text="Model.PaymentTo"
                               ReadOnly="true"
                               InputCssClass="color-maroon font-bold" />
                </div>
            </div>
            <!--Chi trả bồi thường=========================-->
            <div class="row mt-3" style="margin-right:50px">
                <div class="col-12 border border-primary bg-info text-white">
                    Chi trả bồi thường
                </div>
            </div>
            <!--Ngày giờ-->
            <div class="row align-items-end">
                <div class="col-6">
                    <MyDateEdit @bind-Date="Model.PayDateTime"
                                Format="dd/MM/yyyy HH:mm"
                                ReadOnly="true"
                                Literal="Ngày giờ"
                                InputCssClass="color-maroon" />
                </div>
                <div class="col-6">
                    <DxCheckBox @bind-Checked="@Model.PayStatus"
                                Enabled="false">
                        <label style="color:maroon; font-weight:bold">Chi trả</label>
                    </DxCheckBox>
                </div>
            </div>
            <!--Người chi trả-->
            <div class="row">
                <div class="col-12">
                    <MyComboBox @bind-Value="PayPerson"
                                Data="UserList"
                                AllowUserInput="true"
                                TextFieldName="@(nameof(UserAccountModel.Fullname))"
                                Literal="Người chi trả" />
                </div>
            </div>
            <!--Nội dung chi trả-->
            <div class="row">
                <div class="col-12">
                    <MyMemoEdit @bind-Text="Model.PayContent"
                                Rows="2"
                                ReadOnly="true"
                                Literal="Nội dung chi trả" />
                </div>
            </div>
        </div>

        <!--right-------------------------------------------------------------->
        <div class="col-12 col-lg-4 mr-4 padding-right-col3">
            <!--Duyệt bồi thường=============================================-->
            <div class="row mt-3" style="margin-right:50px">
                <div class="col-12 border border-primary bg-info text-white">
                    Duyệt bồi thường
                </div>
            </div>
            <!--Ngày giờ-->
            <div class="row">
                <div class="col-6">
                    <MyDateEdit @bind-Date="Model.AprDateTime"
                                Format="dd/MM/yyyy HH:mm"
                                ReadOnly="true"
                                Literal="Ngày giờ"
                                InputCssClass="color-blue" />
                </div>
            </div>
            <!--Người duyệt-->
            <div class="row">
                <div class="col-12">
                    <MyComboBox @bind-Value="AprPerson"
                                Data="UserList"
                                ReadOnly="true"
                                AllowUserInput="true"
                                TextFieldName="@(nameof(UserAccountModel.Fullname))"
                                Literal="Người duyệt" />
                </div>
            </div>
            <!--Nội dung duyệt-->
            <div class="row">
                <div class="col-12">
                    <MyMemoEdit @bind-Text="Model.AprContent"
                                Rows="2"
                                Literal="Nội dung duyệt" />
                </div>
            </div>
            <!--Trạng thái duyệt-->
            <div class="row mt-3">
                <div class="col-12">
                    <DxCheckBox @bind-Checked="@Model.AprStatus"
                                Enabled="Model.EstAprStatus && !Model.PayStatus">
                        <label style="color:blue; font-weight:bold">Duyệt</label>
                    </DxCheckBox>
                </div>
            </div>
            <br />
            <!--OK, Cancel-->
            <div class="row justify-content-around">
                <MyButtonSave OnClick="SaveMain" />
                <MyButtonCancel OnClick="CloseMain" />
            </div>

        </div>
    </div>

</div>

<!--Attach files-->
<MyPopup @bind-Visible="@AttachFileVisbible"
         HeaderText="Files đính kèm"
         Height="600px"
         Width="1000px"
         ZIndex="1002">
    <BodyContentTemplate>
        <AttachFiles @bind-Visible="@AttachFileVisbible"
                     VoucherNo="@Model.ClaimNo"
                     OnValidSumit="@(async () => await Get_AttachFileCount())" />
    </BodyContentTemplate>
</MyPopup>

<!--Estimation-->
<MyPopup @bind-Visible="@EstimationVisbible"
         HeaderText="Chi tiết báo giá"
         Height="700px"
         Width="1200px"
         ZIndex="1002">
    <BodyContentTemplate>
        <RepairEstimation ClaimNo="@Model.ClaimNo"
                          ReqPersonName="@Model.ReqPersonName"
                          BranchName="@Model.BranchName"
                          RepairerName="@Model.RepairerName"
                          @bind-Visible="@EstimationVisbible"
                          RoleMode="@(Model.PayStatus?0:3)"
                          OnValidSumit="@((value) => RepairEstimation_Submit(value))" />
    </BodyContentTemplate>
</MyPopup>



@code {
    //Parameters and events
    [Parameter]
    public string ClaimNo { get; set; } = "";
    [Parameter]
    public EventCallback OnValidSumit { get; set; }
    [Parameter]
    public bool Visible { get; set; }
    [Parameter]
    public EventCallback<bool> VisibleChanged { get; set; }
    private async Task OnVisibleChanged(bool newValue)
    {
        await VisibleChanged.InvokeAsync(newValue);
    }

    //Master
    private List<UserAccountModel> UserList = new List<UserAccountModel>();
    //
    public UserAccountModel ReqPerson { get; set; }
    public UserAccountModel AprPerson { get; set; }
    public UserAccountModel PayPerson { get; set; }
    //
    private bool OriAprStatus = false;

    private CompenRequestModel Model = new CompenRequestModel();
    private string AttachFileText = "File đính kèm (0 files)";

    #region Initialization
    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        //Load master
        await LoadMaster();

        //Display data ..
        if (string.IsNullOrWhiteSpace(ClaimNo))
        {
            await InitMain();
        }
        else
        {
            await DisplayMain();
        }

        //Set_DefaultPayPerson
        Set_DefaultPayPerson();
    }
    //
    async Task LoadMaster()
    {

        //...
        UserList = await masterService.Load_UserList();


    }
    async Task InitMain()
    {
        Model = new CompenRequestModel();
        Model.UpdMode = 1;

        //ClaimNo
        Model.ClaimNo = await Get_NewVoucherNo();
        //CompenDateTime
        Model.CompenDateTime = DateTime.Now;
        //AccidentDateTime
        Model.AccidentDateTime = DateTime.Now;
        //Customer
        Model.CustomerID = WebUserCredential.Username;
        Model.CustomerName = WebUserCredential.Fullname;
    }
    //
    private async Task<string> Get_NewVoucherNo()
    {
        try
        {
            var request = new Admin.Services.String_Request();
            request.Credential = new Admin.Services.UserCredential()
            {
                Username = WebUserCredential.Username,
                RoleID = WebUserCredential.RoleID,
                AccessToken = WebUserCredential.AccessToken,
                ApiKey = WebUserCredential.ApiKey
            };
            request.StringValue = "001";
            //
            var response = await adminServiceClient.GetVoucherNoAsync(request);
            if (response != null && response.ReturnCode == GrpcReturnCode.OK)
            {
                return response.StringValue;
            }
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message, "Get số báo giá mới bị lỗi !!!");
        }
        //
        return "";
    }

    async void Set_DefaultPayPerson()
    {
        //Skip if set
        if (!string.IsNullOrWhiteSpace(Model.PayPersonID)) return;

        var payPersonRecord = await settingService.GetSetting("002");
        if (payPersonRecord != null)
        {
            PayPerson = UserList.Find(x => x.UserName == payPersonRecord.StringValue1);
        }
    }

    #endregion

    #region MainForm
    async Task DisplayMain()
    {
        try
        {
            //Request
            var request = new Claim.Services.String_Request();
            var Credential = new Claim.Services.UserCredential()
            {
                Username = WebUserCredential.Username,
                RoleID = WebUserCredential.RoleID,
                AccessToken = WebUserCredential.AccessToken,
                ApiKey = WebUserCredential.ApiKey
            };
            request.Credential = Credential;
            //
            request.StringValue = ClaimNo;
            //Call api
            var response = await ClaimServiceClient.GetCompenRequestAsync(request);
            // Success
            if (response != null && response.ReturnCode == GrpcReturnCode.OK)
            {
                //Show success
                ClassHelper.CopyPropertiesDataDateConverted(response.CompenRequest, Model);
                //
                OriAprStatus = Model.AprStatus;

                //ReqPerson, AprPersonID, PayPersonID
                if (!string.IsNullOrWhiteSpace(Model.ReqPersonID)) ReqPerson = UserList.Find(x => x.UserName == Model.ReqPersonID);
                if (!string.IsNullOrWhiteSpace(Model.AprPersonID)) AprPerson = UserList.Find(x => x.UserName == Model.AprPersonID);
                if (!string.IsNullOrWhiteSpace(Model.PayPersonID)) PayPerson = UserList.Find(x => x.UserName == Model.PayPersonID);
                //
                Model.UpdMode = 2;

                //Get attach files count
                await Get_AttachFileCount();
            }
            else
            {
                await InitMain();
            }

            //Refresh layout
            StateHasChanged();
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message, "Load tờ trình thất bại.");
        }
    }

    private async Task Get_AttachFileCount()
    {
        try
        {
            AttachFileText = $"File đính kèm (0 files)";
            //
            var request = new Claim.Services.GetAttachFileCount_Request();
            request.Credential = new Claim.Services.UserCredential()
            {
                Username = WebUserCredential.Username,
                RoleID = WebUserCredential.RoleID,
                AccessToken = WebUserCredential.AccessToken,
                ApiKey = WebUserCredential.ApiKey
            };
            request.VoucherNo = Model.ClaimNo;
            request.DocumentLevel = WebUserCredential.DocumentLevel;
            //
            var response = await ClaimServiceClient.GetAttachFileCountAsync(request);
            if (response != null && response.ReturnCode == GrpcReturnCode.OK)
            {
                AttachFileText = $"File đính kèm ({response.IntValue.ToString()} files)";
            }
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message, "Get số lượng file đính kèm bị lỗi !!!");
        }
        this.StateHasChanged();
    }

    bool ValidateForm()
    {
        //Validate: Approve
        if (!Model.EstAprStatus || Model.PayStatus)
        {
            toastService.ShowWarning("Hồ sơ ngoài đối tượng duyệt", "Không cho phép");
            return false;
        }
        //Approve Level
        if (Model.ApproveLevel > WebUserCredential.ApproveLevel)
        {
            toastService.ShowWarning("Hồ sơ này đã được duyệt ở cấp cao hơn", "Bạn không được phép duyệt");
            return false;
        }
        //
        return true;
    }

    async void SaveMain()
    {
        try
        {
            //Validate input data
            var validateRes = ValidateForm();
            if (!validateRes) return;

            //Approve
            if (!OriAprStatus && Model.AprStatus)
            {
                Model.AprDateTime = DateTime.Now;
                Model.AprPersonID = WebUserCredential.Username;
                Model.AprPersonName = WebUserCredential.Fullname;
            }

            //Request
            var request = new SaveCompenRequest_Request();
            var Credential = new Claim.Services.UserCredential()
            {
                Username = WebUserCredential.Username,
                RoleID = WebUserCredential.RoleID,
                AccessToken = WebUserCredential.AccessToken,
                ApiKey = WebUserCredential.ApiKey
            };
            request.Credential = Credential;

            //
            request.CompenRequest = new grpcCompenRequestModel();
            ClassHelper.CopyPropertiesDataDateConverted(Model, request.CompenRequest);

            //Approve mode
            request.IsApproval = true;
            request.CompenRequest.ApproveLevel = WebUserCredential.ApproveLevel;

            //ReqPerson
            if (ReqPerson != null)
            {
                request.CompenRequest.ReqPersonID = ReqPerson.UserName;
                request.CompenRequest.ReqPersonName = ReqPerson.Fullname;
            }
            //AprPerson
            if (AprPerson != null)
            {
                request.CompenRequest.AprPersonID = AprPerson.UserName;
                request.CompenRequest.AprPersonName = AprPerson.Fullname;
            }
            // PayPerson
            if (PayPerson != null)
            {
                request.CompenRequest.PayPersonID = PayPerson.UserName;
                request.CompenRequest.PayPersonName = PayPerson.Fullname;
            }
            //Call api
            var response = await ClaimServiceClient.SaveCompenRequestAsync(request);
            // Success
            if (response == null || response.ReturnCode != GrpcReturnCode.OK)
            {
                toastService.ShowError("", "Lưu thất bại");
            }

            //Reload data
            await OnValidSumit.InvokeAsync();
            await CloseMain();
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message, "Lưu tờ trình thất bại.");
        }
    }
    async Task CloseMain()
    {
        await OnVisibleChanged(false);
    }
    #endregion

    #region Items
    private bool AttachFileVisbible { get; set; } = false;
    void ShowAttachFiles()
    {
        AttachFileVisbible = true;
        StateHasChanged();
    }

    private bool EstimationVisbible { get; set; } = false;
    void ShowEstimation()
    {
        EstimationVisbible = true;
        StateHasChanged();
    }

    void DiscountRate_OnValueChanged(double newValue)
    {
        Model.DiscountRate = newValue;
        Model.DiscountAmount = Math.Round(Model.AprRepairPrice * Model.DiscountRate, 0);
        Derived_ClaimPrice();
    }
    void TipAmount_OnValueChanged(double newValue)
    {
        Model.TipAmount = newValue;
        Derived_ClaimPrice();
    }

    private void Derived_ClaimPrice()
    {
        Model.ClaimPrice = Model.AprRepairPrice + Model.AprVAT - Model.DiscountAmount - Model.TipAmount;
    }

    private async void RepairEstimation_Submit(RepairEstimation_ReturnModel estReturn)
    {
        Model.AprRepairPrice = estReturn.AprRepairPrice;
        Model.DealVAT = estReturn.DealVAT;
        Model.AprVAT = estReturn.AprVAT;
        //Discount
        Model.DiscountAmount = Math.Round((Model.AprRepairPrice + Model.AprVAT) * Model.DiscountRate, 0);
        //ClaimPrice
        Model.ClaimPrice = Model.AprRepairPrice + Model.AprVAT - Model.DiscountAmount - Model.TipAmount;
        //
        await Get_AttachFileCount();
    }
    #endregion



}
