
<MyPopupEdit Title="Nhập báo giá"
             T="EstimationModel"
             Model="DspModel"
             OnCancelClick="OnCancel"
             OnSubmitClick="OnSubmit">
    <MudTextField Label="No." @bind-Value="DspModel.LineNo" For="@(() => DspModel.LineNo)" />
    <MudTextField Label="Mã hạng mục" @bind-Value="DspModel.ItemCode" />
    <MudTextField Label="Tên hạng mục" @bind-Value="DspModel.ItemName" For="@(() => DspModel.ItemName)" />
    <MudTextField Label="Thay thế" @bind-Value="DspModel.IsReplace" />
    <MudNumericField Label="Số lượng" Value="DspModel.Quantity" ValueChanged="@((value) => Quantity_Changed(value))" For="@(() => DspModel.Quantity)" HideSpinButtons="true" Format="N0" T="double" />
    <MudNumericField Label="Đơn giá" Value="DspModel.UnitPrice" ValueChanged="@((value) => UnitPrice_Changed(value))" For="@(() => DspModel.UnitPrice)" HideSpinButtons="true" Format="N0" T="double" />
    <MudNumericField Label="Thành tiền" @bind-Value="DspModel.Amount" ReadOnly="true" Format="N0" T="double" />
    <MudNumericField Label="Duyệt" @bind-Value="DspModel.ApproveAmount" ReadOnly="@(!IsApprover)" For="@(() => DspModel.ApproveAmount)" Format="N0" T="double" />
    <MudTextField Label="Ghi chú" @bind-Value="DspModel.Notes" />
</MyPopupEdit>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public EstimationModel Model { get; set; }
    [Parameter] public bool IsApprover { get; set; }
    //
    EstimationModel DspModel = new EstimationModel();
    //
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        //Display data
        ClassHelper.CopyPropertiesData(Model, DspModel);
    }
    //Cancel
    private void OnCancel()
    {
        MudDialog.Cancel();
    }
    //Submit
    private void OnSubmit()
    {
        ClassHelper.CopyPropertiesData(DspModel, Model);
        //Return changed
        MudDialog.Close(DialogResult.Ok(Model));
    }

    void UnitPrice_Changed(double newValue)
    {
        Model.UnitPrice = newValue;
        //
        Model.Amount = Model.Quantity * Model.UnitPrice;
        //
        this.StateHasChanged();
    }
    void Quantity_Changed(double newValue)
    {
        Model.Quantity = newValue;
        //
        Model.Amount = Model.Quantity * Model.UnitPrice;
        //
        this.StateHasChanged();
    }
}