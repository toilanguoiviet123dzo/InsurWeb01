<style>
    .dxbs-modal > .dxbs-popup > .dxbs-modal-content > .dxbs-modal-footer {
        margin: unset;
        padding: 0.5rem 1rem;
        justify-content: center;
    }
</style>

<DxPopup Visible="@Visible"
         VisibleChanged="@((value) => OnVisibleChanged(value))"
         ShowCloseButton="true"
         ShowFooter="true">
    <HeaderContentTemplate>
        <h3>Please confirm</h3>
    </HeaderContentTemplate>
    <BodyContentTemplate>
        <span>
            @Message
        </span>
    </BodyContentTemplate>
    <FooterContentTemplate>
        <div>
            <DxButton RenderStyle="@ButtonRenderStyle.Success" style="width:100px; font-size:15px;margin-right:1rem" @onclick="@ConfirmHandler" Text="OK" />
            <DxButton RenderStyle="@ButtonRenderStyle.Secondary" style="width:100px; font-size:15px;margin-right:1rem" @onclick="@(() => OnVisibleChanged(false))" Text="Cancel" />
        </div>
    </FooterContentTemplate>
</DxPopup>

@code {
    [Parameter]
    public bool Visible { get; set; }
    [Parameter]
    public string Message { get; set; } = "Please select your choice";
    [Parameter]
    public EventCallback<bool> VisibleChanged { get; set; }
    private async Task OnVisibleChanged(bool newValue)
    {
        await VisibleChanged.InvokeAsync(newValue);
    }
    [Parameter]
    public EventCallback confirm { get; set; }

    private async void ConfirmHandler()
    {
        await confirm.InvokeAsync();
    }
}
